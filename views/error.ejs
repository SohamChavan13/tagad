<%
const pageContent = `
    <section class="contact-hero" style="min-height: 80vh; display: flex; align-items: center;">
        <div class="container">
            <div class="contact-hero-content" style="text-align: center;">
                <div style="margin-bottom: var(--space-8);">
                    <div class="visual-3d" id="error-3d" style="width: 200px; height: 200px; margin: 0 auto var(--space-8);"></div>
                </div>
                <h1 class="page-title" style="font-size: var(--font-size-6xl); margin-bottom: var(--space-4);">
                    5<span class="gradient-text">0</span>0
                </h1>
                <h2 style="font-size: var(--font-size-3xl); color: var(--white); margin-bottom: var(--space-6);">
                    Server Error
                </h2>
                <p class="page-description" style="max-width: 500px; margin: 0 auto var(--space-8);">
                    Something went wrong on our end. Our team has been notified and is working to fix the issue. 
                    Please try again in a few moments.
                </p>
                <div style="display: flex; gap: var(--space-4); justify-content: center; flex-wrap: wrap;">
                    <a href="/" class="btn btn-primary btn-large">Go Home</a>
                    <button onclick="location.reload()" class="btn btn-outline btn-large">Try Again</button>
                </div>
                
                ${typeof error !== 'undefined' && error.stack ? `
                    <div style="margin-top: var(--space-16); text-align: left; max-width: 600px; margin-left: auto; margin-right: auto;">
                        <details style="background: rgba(255,255,255,0.05); padding: var(--space-4); border-radius: var(--border-radius); border: 1px solid rgba(255,255,255,0.1);">
                            <summary style="color: var(--primary); cursor: pointer; margin-bottom: var(--space-2);">Error Details (Development Mode)</summary>
                            <pre style="color: var(--gray-300); font-size: var(--font-size-sm); overflow-x: auto; white-space: pre-wrap;">${error.stack}</pre>
                        </details>
                    </div>
                ` : ''}
            </div>
        </div>
    </section>

    <script>
        // Add error-specific 3D animation
        document.addEventListener('DOMContentLoaded', function() {
            const container = document.getElementById('error-3d');
            if (!container || !window.THREE) return;

            const scene = new THREE.Scene();
            const camera = new THREE.PerspectiveCamera(75, 1, 0.1, 1000);
            const renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });
            
            renderer.setSize(200, 200);
            renderer.setClearColor(0x000000, 0);
            container.appendChild(renderer.domElement);

            // Create warning/error geometry
            const geometry = new THREE.OctahedronGeometry(1);
            const material = new THREE.MeshBasicMaterial({
                color: 0xF59E0B,
                wireframe: true,
                transparent: true,
                opacity: 0.8
            });
            
            const shape = new THREE.Mesh(geometry, material);
            scene.add(shape);

            // Add warning particles
            const particleGeometry = new THREE.BufferGeometry();
            const particleCount = 30;
            const positions = new Float32Array(particleCount * 3);
            
            for (let i = 0; i < particleCount * 3; i++) {
                positions[i] = (Math.random() - 0.5) * 8;
            }
            
            particleGeometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));
            const particleMaterial = new THREE.PointsMaterial({
                color: 0xF59E0B,
                size: 0.08,
                transparent: true,
                opacity: 0.7
            });
            
            const particles = new THREE.Points(particleGeometry, particleMaterial);
            scene.add(particles);

            camera.position.z = 3;

            function animate() {
                requestAnimationFrame(animate);
                
                shape.rotation.x += 0.01;
                shape.rotation.y += 0.015;
                
                // Pulsing effect for warning
                const scale = 1 + Math.sin(Date.now() * 0.005) * 0.1;
                shape.scale.set(scale, scale, scale);

                particles.rotation.y += 0.003;
                
                renderer.render(scene, camera);
            }
            
            animate();
        });
    </script>
`;
%>

<%- include('layout', { body: pageContent }) %>